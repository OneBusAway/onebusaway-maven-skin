<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>onebusaway</artifactId>
    <groupId>org.onebusaway</groupId>
    <version>1.2.0-SNAPSHOT</version>
  </parent>
  <artifactId>onebusaway-maven-skin</artifactId>
  <version>1.0.1-SNAPSHOT</version>
  <name>onebusaway-maven-skin</name>
  <description>A simple Maven Site Skin that bundles a couple of common resources.</description>

  <repositories>
    <repository>
      <id>public.onebusaway.org</id>
      <url>http://nexus.onebusaway.org/content/groups/public/</url>
    </repository>
  </repositories>

  <scm>
    <connection>scm:git:http://github.com/OneBusAway/onebusaway-maven-skin.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/OneBusAway/onebusaway-maven-skin.git</developerConnection>
    <url>http://github.com/OneBusAway/onebusaway-maven-skin</url>
  </scm>

  <dependencies>
    <dependency>
      <groupId>org.apache.maven.skins</groupId>
      <artifactId>maven-default-skin</artifactId>
      <version>1.1</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- We're mostly just directly extending the maven-default-skin with a few extra resources.  As such, we
        we extract the contents of the skin into our own skin. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.maven.skins</groupId>
                  <artifactId>maven-default-skin</artifactId>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/classes</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>